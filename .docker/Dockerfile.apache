# NON BUILD APACHE IMAGE
FROM node:22-alpine AS frontend

RUN npm install -g pnpm@9

WORKDIR /app/frontend

COPY frontend/pnpm-lock.yaml .
RUN pnpm fetch

COPY frontend .
RUN pnpm install --offline && pnpm build

FROM python:3.12-slim AS server

RUN DEBIAN_FRONTEND=noninteractive useradd -m wgvpn && \
    apt-get update && \
    apt-get install -y --no-install-recommends sudo wireguard-tools iptables iproute2 apache2 libapache2-mod-wsgi-py3 && \
    apt-get clean all && \
    rm -rf /var/lib/apt/lists/*

RUN echo "wgvpn ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/wgvpn && \
    mkdir /app -p && \
    mkdir /var/log/apache2 -p && \
    chown www-data:www-data /var/log/apache2 && \
    chown wgvpn:wgvpn /app && \
    chown wgvpn:wgvpn /etc/wireguard && \
    chown -R wgvpn:wgvpn /var/www

USER wgvpn
WORKDIR /app
COPY requirements.txt ./

RUN pip install -U pip wheel setuptools && \
    pip install -U -r requirements.txt && \
    mkdir /app/data


COPY --from=frontend /app/frontend/build /var/www/
COPY .docker/apache.conf /etc/apache2/sites-available/000-default.conf
COPY .docker/entrypoint.sh /entrypoint.sh
COPY . .

EXPOSE 80
EXPOSE 51820/udp

# CMD ["python3", "app.py", "-s"]
CMD ["/entrypoint.sh"]
